# Fichiers compilés / optimisés / DLL
__pycache __ /
* .py [morue]
* $ py.class

# Extensions C
*.alors

# Distribution / emballage
.Python
construire/
développer des oeufs /
dist /
téléchargements /
des œufs/
.des œufs/
lib /
lib64 /
les pièces/
sdist /
var /
roues/
share / roues-python /
* .egg-info /
.installed.cfg
*.Oeuf
MANIFESTE

# PyInstaller
# Habituellement, ces fichiers sont écrits par un script python à partir d'un modèle
# avant que PyInstaller ne construise l'exe, de manière à y injecter une date / d'autres informations.
*.manifeste
* .spec

# Journaux du programme d'installation
pip-log.txt
pip-delete-this-directory.txt

# Rapports de test / couverture unitaire
htmlcov /
.tox /
.nox /
.couverture
.couverture.*
.cache
nosetests.xml
Coverage.xml
*.couverture
* .py, couverture
.hypothèse/
.pytest_cache /
couverture/

# Traductions
* .mo
*.pot

# Django trucs:
*.Journal
local_settings.py
db.sqlite3
db.sqlite3-journal

# Trucs de flacon:
exemple/
.webassets-cache

# Trucs déchirés:
.scrapy

# Documentation Sphinx
docs / _build /

# PyBuilder
.pybuilder /
cible/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default /
ipython_config.py

# pyenv
# Pour une bibliothèque ou un package, vous voudrez peut-être ignorer ces fichiers car le code est
# destiné à fonctionner dans plusieurs environnements; sinon, enregistrez-les:
# .python-version

# pipenv
# Selon pypa / pipenv # 598, il est recommandé d'inclure Pipfile.lock dans le contrôle de version.
# Cependant, en cas de collaboration, si vous avez des dépendances ou dépendances spécifiques à la plateforme
# n'ayant pas de support multiplateforme, pipenv peut installer des dépendances qui ne fonctionnent pas ou non
# installer toutes les dépendances nécessaires.
# Pipfile.lock

# PEP 582; utilisé par ex. github.com/David-OConnor/pyflow
__pypackages __ /

# Trucs de céleri
céleri-calendrier
celerybeat.pid

# Fichiers analysés par SageMath
* .sage.py

# Environnements
.env
.venv
env /
venv /
ENV /
env.bak /
venv.bak /

# Paramètres du projet Spyder
.spyderproject
.spyproject

# Paramètres du projet de corde
.ropeproject

# documentation mkdocs
/site

# mypy
.mypy_cache /
.dmypy.json
dmypy.json

# Vérificateur de type Pyre
.bûcher/

# analyseur de type statique pytype
.pytype /

# Symboles de débogage Cython
cython_debug /
